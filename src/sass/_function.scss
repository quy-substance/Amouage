@charset "UTF-8";

/* media query shortcode
   ========================================================================== */
@mixin sp {
    @media (max-width: ($breakpoint-sp)) {
        @content;
    }
}

@mixin setDropShadow() {
    box-shadow: -1px 2px 4px -1px rgba(0,0,0,0.1);
}

/* transition
* ========================================================================== */
@mixin easyAnimation() {
  @include transition($animation-speed $animation-easing);
}

@mixin transition($transitions...) {
  $unfoldedTransitions: ();
  @each $transition in $transitions {
    $unfoldedTransitions: append(
      $unfoldedTransitions,
      unfoldTransition($transition),
      comma
    );
  }
  -webkit-transition: $unfoldedTransitions;
  transition: $unfoldedTransitions;
}

@function unfoldTransition($transition) {
  // Default values
  $property: all;
  $duration: 0.5;
  $easing: null; // Browser default is ease, which is what we want
  $delay: null; // Browser default is 0, which is what we want
  $defaultProperties: ($property, $duration, $easing, $delay);

  // Grab transition properties if they exist
  $unfoldedTransition: ();

  @for $i from 1 through length($defaultProperties) {
    $p: null;

    @if $i <=length($transition) {
      $p: nth($transition, $i);
    } @else {
      $p: nth($defaultProperties, $i);
    }

    $unfoldedTransition: append($unfoldedTransition, $p);
  }

  @return $unfoldedTransition;
}

/* cover - object-fit set
* ========================================================================== */
@mixin objectFit($mode) {
  object-fit: $mode;
  object-position: center;
  width: 100%;
  height: 100%;
}
